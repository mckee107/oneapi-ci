# SPDX-FileCopyrightText: 2022 Intel Corporation
#
# SPDX-License-Identifier: MIT
# Revised by CDM

name: build_windows

on:
  push:
  workflow_call:
env:
  WINDOWS_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/f96c71db-2c6c-45d9-8c1f-0348ef5885cf/w_BaseKit_p_2023.2.0.49396_offline.exe
  WINDOWS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/IRC_NAS/438527fc-7140-422c-a851-389f2791816b/w_HPCKit_p_2023.2.0.49441_offline.exe
  WINDOWS_CPP_COMPONENTS: intel.oneapi.win.cpp-compiler
  WINDOWS_FORTRAN_COMPONENTS: intel.oneapi.win.ifort-compiler
  WINDOWS_DPCPP_COMPONENTS: intel.oneapi.win.dpcpp-compiler
  CACHE_NUMBER: 1
  SAMPLES_TAG: 2023.2.0
  COMPILER_VERSION: 2023.2.0
  TBB_VERSION: 2021.10.0
  VS_VER: vs2022

jobs:
  build_windows_cpp:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
            C:\Program Files (x86)\Intel\oneAPI\setvars-vcvarsall.bat
            C:\Program Files (x86)\Intel\oneAPI\compiler
        key: install-${{ env.CACHE_NUMBER }}-${{ env.WINDOWS_HPCKIT_URL }}-${{ env.WINDOWS_CPP_COMPONENTS }}-compiler-${{ hashFiles('**/scripts/cache_exclude_windows.sh') }}
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_windows.bat $WINDOWS_HPCKIT_URL $WINDOWS_CPP_COMPONENTS
    - name: build
      run: scripts/build_windows.bat c++ $VS_VER $SAMPLES_TAG
    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      shell: bash
      run: scripts/cache_exclude_windows.sh

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: steps.cache-install.outputs.cache-hit != 'true'
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          extract.log
          bootstrapper*
          installer*
        retention-days: 7

  build_windows_fortran:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
            C:\Program Files (x86)\Intel\oneAPI\setvars-vcvarsall.bat
            C:\Program Files (x86)\Intel\oneAPI\compiler
        key: install-${{ env.CACHE_NUMBER }}-${{ env.WINDOWS_HPCKIT_URL }}-${{ env.WINDOWS_FORTRAN_COMPONENTS }}-compiler-${{ hashFiles('**/scripts/cache_exclude_windows.sh') }}
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_windows.bat $WINDOWS_HPCKIT_URL $WINDOWS_FORTRAN_COMPONENTS
    - name: build
      run: scripts/build_windows.bat fortran $VS_VER $SAMPLES_TAG
    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      shell: bash
      run: scripts/cache_exclude_windows.sh

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: steps.cache-install.outputs.cache-hit != 'true'
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          extract.log
          bootstrapper*
          installer*
        retention-days: 7

  build_windows_dpcpp:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: |
          C:\Program Files (x86)\Intel\oneAPI\setvars-vcvarsall.bat
          C:\Program Files (x86)\Intel\oneAPI\compiler
          C:\Program Files (x86)\Intel\oneAPI\tbb
          C:\Windows\System32\OpenCL.dll
        key: install-${{ env.CACHE_NUMBER }}-${{ env.WINDOWS_BASEKIT_URL }}-${{ env.WINDOWS_DPCPP_COMPONENTS }}-compiler-tbb-opencl-${{ hashFiles('**/scripts/cache_exclude_windows.sh') }}
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: scripts/install_windows.bat $WINDOWS_BASEKIT_URL $WINDOWS_DPCPP_COMPONENTS
    - name: restore registry on cache hit
      if: steps.cache-install.outputs.cache-hit == 'true'
      run: scripts/restore_registry.bat $COMPILER_VERSION $TBB_VERSION
    - name: build
      run: scripts/build_windows.bat dpc++ $VS_VER $SAMPLES_TAG
    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      shell: bash
      run: scripts/cache_exclude_windows.sh

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: steps.cache-install.outputs.cache-hit != 'true'
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          extract.log
          bootstrapper*
          installer*
        retention-days: 7
